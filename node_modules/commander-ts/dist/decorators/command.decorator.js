"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.command = void 0;
const commander = require("commander");
const helpers_1 = require("../helpers");
const metadata_1 = require("../metadata");
function command() {
    return (target, propertyKey, descriptor) => {
        try {
            const cmd = (0, helpers_1.prepareSubcommand)(target, propertyKey);
            let chain = commander.command(cmd);
            if (Reflect.hasMetadata(metadata_1.CommandOptionsMetadata, target, propertyKey)) {
                const options = Reflect.getMetadata(metadata_1.CommandOptionsMetadata, target, propertyKey);
                chain = options.reduce((prev, opt) => {
                    const [arg1, arg2, arg3, arg4] = opt;
                    return chain.option(arg1, arg2, arg3, arg4);
                }, chain);
            }
            chain.action((...args) => __awaiter(this, void 0, void 0, function* () {
                const context = args[args.length - 1];
                const cmdArgs = args.slice(0, args.length - 1);
                try {
                    const result = target[propertyKey].apply(context, cmdArgs);
                    if (result instanceof Promise) {
                        yield result;
                    }
                }
                catch (_a) {
                    process.exit(1);
                }
                finally {
                    process.exit(0);
                }
            }));
        }
        catch (e) {
            console.error(e.message);
            process.exit(1);
        }
    };
}
exports.command = command;
//# sourceMappingURL=command.decorator.js.map