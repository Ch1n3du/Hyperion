"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.injectArgs = void 0;
const metadata_1 = require("../metadata");
const index_1 = require("../models/index");
function injectArgs(program, target, propertyKey) {
    if (Reflect.hasMetadata(metadata_1.ArgsMetadata, target, propertyKey)) {
        const args = Reflect.getMetadata(metadata_1.ArgsMetadata, target, propertyKey);
        const predicate = (arg) => arg instanceof index_1.VariadicArg;
        const variadic = args.find(predicate);
        if (variadic && (args.findIndex(predicate) !== (args.length - 1))) {
            throw new TypeError(`Variadic argument must be specified last the argument list of the ${String(propertyKey)}() function.`);
        }
        const argv = [];
        let index = 0;
        for (let i = 0; i < args.length; i += 1) {
            if (args.find(arg => arg.index === i)) {
                argv.push(program.args[index]);
                index += 1;
            }
            else {
                argv.push(undefined);
            }
        }
        return argv;
    }
}
exports.injectArgs = injectArgs;
//# sourceMappingURL=inject-args.js.map