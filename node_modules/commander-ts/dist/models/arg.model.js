"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VariadicArg = exports.RequiredArg = exports.OptionalArg = exports.CommandArg = void 0;
class CommandArg {
    constructor(name, index) {
        this.name = name;
        this.index = index;
        if (typeof name === 'symbol') {
            throw new TypeError('Symbols are not supported as argument names.');
        }
    }
}
exports.CommandArg = CommandArg;
class OptionalArg extends CommandArg {
    toString() {
        return `[${String(this.name)}]`;
    }
}
exports.OptionalArg = OptionalArg;
class RequiredArg extends CommandArg {
    toString() {
        return `<${String(this.name)}>`;
    }
}
exports.RequiredArg = RequiredArg;
class VariadicArg extends CommandArg {
    toString() {
        return `[${String(this.name)}...]`;
    }
}
exports.VariadicArg = VariadicArg;
//# sourceMappingURL=arg.model.js.map